/*
 * Copyright 2016 Steven Myers
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()

        // for gitsemver plugin
        maven {
            url "http://dl.bintray.com/palantir/releases"
        }
    }
    dependencies {
        classpath 'com.palantir:gradle-gitsemver:0.6.0'
    }
}

apply plugin: 'scala'
apply plugin: 'gitsemver'

version semverVersion()

repositories {
    mavenCentral()
    mavenLocal()
}

def scalaVersion = "2.11"
def akkaVersion = "2.4.11"

def semver = semverVersion().toString()

processResources {
    filter ReplaceTokens, tokens: [VERSION: semver]
}

dependencies {
    compile("org.bytabit.ft:core:0.13.+") {
      exclude group: "com.typesafe.akka"
    }
    compile "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-persistence_$scalaVersion:$akkaVersion"
    compile "org.iq80.leveldb:leveldb:0.7"
    compile "org.fusesource.leveldbjni:leveldbjni-all:1.8"
    compile "com.typesafe.akka:akka-http-experimental_$scalaVersion:$akkaStreamVersion"
    compile "com.typesafe.akka:akka-http-spray-json-experimental_$scalaVersion:$akkaStreamVersion"
    compile "ch.qos.logback:logback-classic:1.1.3"

    testCompile "org.scalatest:scalatest_$scalaVersion:2.2.1"
    testCompile "org.scalacheck:scalacheck_$scalaVersion:1.12.2"
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath sourceSets.test.runtimeClasspath
}
